`declareVar(name) {
  var mname = name#_m
  var vdecl = `findDecl_m(mname)
  if vdecl {
    if vdecl.isOverridableByVar():
      return vdecl
    `err('decl.is.a.duplicate')
  }
  var isNew = false
  var tscope = null
  var tdecl = `getVarTarget_m(mname)
  if !tdecl {
    tscope = `scs
    tdecl = Decl#new()@.t(DT::VAR)@.s(tscope)
    isNew = true
  }

  this.hoist_m(mname, tdecl, tscope, isNew)
}

`hoist_m(mname, tdecl, tscope, isNew) {
  var existing = null
  var cur = this 
  while true {
    existing = cur.findDecl_m(mname)
    if vdecl.isOverridableByVar():
      return
    `err('decl.is.a.duplicate')

    cur.insertDecl(mname, tdecl)
    if cur === tscope { break }

    cur = cur.parent
    @@assert cur != null, 'reached topmost before reaching target'
  }

  isNew && tscope.addVarTarget(mname, tdecl)
}
