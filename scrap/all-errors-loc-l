<arg.non.tail>
 * src/fun-utils@Parser.js 22 #
 * src/primary@Parser.js 242  #

<arg.non.tail.in.func>
 * src/fun-utils@Parser.js 22 #

<array.unfinished>
 * src/new-array@Parser.js 151 #

<arrow.has.a.paren.async>
 * src/arrow@Parser.js 132 #

<arrow.missing.after.empty.list>
 * src/err-tricky@Parser.js 27 #

<arrow.newline.before.paren.async>
 * src/arrow@Parser.js 109 #

<arrow.param.is.await.in.an.async>
 * src/arrow@Parser.js 20 #

<arrow.paren.no.arrow> #

<assig.not.first>
 * src/non-assig@Parser.js 213 #

<assig.not.simple>
 * src/new-assig@Parser.js 135 #

<assig.to.arguments.or.eval>
 * src/err-tricky@Parser.js 24 #

<assig.to.eval.or.arguments>
 * src/assignment@Parser.js 5 #

<async.gen.not.yet.supported>
 * src/fundef@Parser.js 80 #

<async.newline>--<async.newline.in.an.obj>
 * src/mem@Parser.js 96 #
 * src/mem@Parser.js 109 #
 * src/mem@Parser.js 122 #

<await.args>
 * src/idStatementOrId@Parser.js 160 #

<await.in.strict>
 * src/idStatementOrId@Parser.js 169 #

<bind.arguments.or.eval>
 * src/pattern@Parser.js 8 #

<binding.rest.arg.not.id>
 * src/arrow@Parser.js 72 #
 * src/arrow@Parser.js 79 #

<binding.to.arguments.or.eval>
 * src/arrow@Parser.js 24 #

<block.dependent.is.unfinished>
 * src/statement@Parser.js 536 #

<block.dependent.no.opening.curly>
 * src/statement@Parser.js 529 #

<block.unfinished>
 * src/statement@Parser.js 214 #

<break.no.such.label>
 * src/statement@Parser.js 330 #

<break.not.in.breakable>
 * src/statement@Parser.js 342 #

<call.args.is.unfinished>
 * src/primary@Parser.js 118 #

<catch.has.no.end.paren>
 * src/statement@Parser.js 605 #

<catch.has.no.opening.paren>
 * src/statement@Parser.js 592 #

<catch.has.an.assig.param>
 * src/statement@Parser.js 598 #

<catch.has.no.param>
 * src/statement@Parser.js 602 #

<class.constructor.is.a.dup>
 * src/fundef@Parser.js 141 #

<class.constructor.is.special.mem>
 * src/fundef@Parser.js 139 #

<class.decl.has.no.name>
 * src/class@Parser.js 30 #

<class.label.not.allowed>
 * src/class@Parser.js 4 #

<class.decl.not.in.block>
 * src/class@Parser.js 24 #

<class.no.curly>
 * src/class@Parser.js 51 #

<class.prototype.is.static.mem>
 * src/fundef@Parser.js 132 #

<class.super.call>
 * src/class@Parser.js 103

<class.super.lone>
 * src/class@Parser.js 115

<class.super.mem>
 * src/class@Parser.js 110

<class.unfinished>
 * src/class@Parser.js 84

<comment.multi.unfinished>
 * src/comment@Parser.js 34

<complex.assig.not.arg>
 * src/arrow@Parser.js 41 #no

<complex.assig.not.pattern>
 * src/new-assig@Parser.js 43

<cond.colon>
 * src/non-assig@Parser.js 32

<const.has.no.init>
 * src/var@Parser.js 42

<const.not.in.v5>
 * src/for@Parser.js 40
 * src/idStatementOrId@Parser.js 125

<continue.no.such.label>
 * src/statement@Parser.js 288

<continue.not.a.loop.label>
 * src/statement@Parser.js 289

<continue.not.in.loop>
 * src/statement@Parser.js 273 #

<decl.label>
 * src/var@Parser.js 16

<delete.arg.not.a.mem>
 * src/non-assig@Parser.js 72

<do.has.no.closing.paren>
 * src/statement@Parser.js 249

<do.has.no.opening.paren>
 * src/statement@Parser.js 243

<do.has.no.while>
 * src/statement@Parser.js 239 #

<esc.8.or.9>
 * src/esc-general@Parser.js 90
 * src/esc-general@Parser.js 155

<eval.arguments.in.strict>
 * src/validate@Parser.js 39
 * src/validate@Parser.js 111

<exists.in.current>
 * src/core@Scope.js 135

<export.all.no.from>
 * src/dexport@Parser.js 23

<export.all.not.*>
 * src/dexport@Parser.js 18

<export.all.source.not.str>
 * src/dexport@Parser.js 28

<export.async.but.no.function>
 * src/dexport@Parser.js 183

<export.default.const.let>
 * src/dexport@Parser.js 141

<export.named.has.reserved>
 * src/dexport@Parser.js 111

<export.named.list.not.finished>
 * src/dexport@Parser.js 91

<export.named.no.exports>
 * src/dexport@Parser.js 190

<export.named.not.id.from>
 * src/dexport@Parser.js 96

<export.named.source.not.str>
 * src/dexport@Parser.js 102

<export.newline.before.the.function>
 * src/dexport@Parser.js 180

<export.not.in.module>
 * src/idStatementOrId@Parser.js 202

<export.specifier.after.as.id>
 * src/dexport@Parser.js 69

<export.specifier.not.as>
 * src/dexport@Parser.js 64

<for.decl.multi>
 * src/for@Parser.js 83

<for.decl.no.init>
 * src/for@Parser.js 127

<for.in.has.decl.init>
 * src/for@Parser.js 89

<for.in.has.init.assig>
 * src/for@Parser.js 76

<for.iter.no.end.paren>
 * src/for@Parser.js 98

<for.iter.not.of.in>
 * src/for@Parser.js 119

<for.of.var.overrides.catch>
 * src/for@Parser.js 165
 * src/for@Parser.js 171

<for.simple.no.end.paren>
 * src/for@Parser.js 138

<for.simple.no.init.comma>
 * src/for@Parser.js 130

<for.simple.no.test.comma>
 * src/for@Parser.js 134

<for.with.no.opening.paren>
 * src/for@Parser.js 12

<func.args.has.dup>
 * src/fun-utils@Parser.js 95
 * src/fun-utils@Parser.js 119
 * src/scope@Parser.js 64
 * src/scope@Parser.js 75
 * src/scope@Parser.js 94

<func.args.no.end.paren>
 * src/fun-utils@Parser.js 43

<func.args.no.opening.paren>
 * src/fun-utils@Parser.js 5

<func.args.not.enough>
 * src/fun-utils@Parser.js 40

<func.body.is.empty.expr>
 * src/fun-utils@Parser.js 57

<func.body.is.unfinished>
 * src/fun-utils@Parser.js 76

<func.decl.not.allowed>
 * src/fundef@Parser.js 32

<func.decl.not.alowed>
 * src/fundef@Parser.js 35

<func.strict.non.simple.param>
 * src/fun-utils@Parser.js 85
 * src/fun-utils@Parser.js 106

<hex.esc.byte.not.hex>
 * src/esc-general@Parser.js 23
 * src/esc-general@Parser.js 26
 * src/esc-general@Parser.js 131
 * src/esc-general@Parser.js 134

<id.esc.must.be.idbody>
 * src/identifier@Parser.js 44

<id.esc.must.be.idhead>
 * src/nextlookahead@Parser.js 190

<id.multi.must.be.idbody>
 * src/identifier@Parser.js 37
 * src/identifier@Parser.js 60

<id.multi.must.be.idhead>
 * src/nextlookahead@Parser.js 191

<id.name.has.surrogate.pair>
 * src/nextlookahead@Parser.js 180

<id.slash.no.u>
 * src/identifier@Parser.js 29

<id.u.not.after.slash>
 * src/nextlookahead@Parser.js 174

<if.has.no.closing.paren>
 * src/statement@Parser.js 147

<if.has.no.opening.paren>
 * src/statement@Parser.js 142

<import.from>
 * src/dimport@Parser.js 106

<import.invalid.specifier.after.comma>
 * src/dimport@Parser.js 100

<import.namespace.specifier.not.*>
 * src/dimport@Parser.js 35

<import.namespace.specifier.local.not.id>
 * src/dimport@Parser.js 44

<import.namespace.specifier.no.as>
 * src/dimport@Parser.js 42

<import.not.in.module>
 * src/idStatementOrId@Parser.js 209

<import.source.is.not.str>
 * src/dimport@Parser.js 113

<import.specifier.list.unfinished>
 * src/dimport@Parser.js 92

<import.specifier.local.not.id>
 * src/dimport@Parser.js 70

<import.specifier.no.as>
 * src/dimport@Parser.js 65

<incdec.post.not.simple.assig>
 * src/non-assig@Parser.js 115

<incdec.pre.not.simple.assig>
 * src/non-assig@Parser.js 104

<invalid.arg>
 * src/arrow@Parser.js 14

<label.is.a.dup>
 * src/statement@Parser.js 92

<let.decl.not.in.block>
 * src/scope@Parser.js 42

<lexical.decl.not.in.block>
 * src/let@Parser.js 9

<lexical.name.is.let>
 * src/scope@Parser.js 45

<mem.gen.has.no.name>
 * src/mem@Parser.js 136

<mem.id.is.null>
 * src/primary@Parser.js 74

<mem.name.not.id>
 * src/new@Parser.js 54
 * src/primary@Parser.js 70

<mem.unfinished>
 * src/new@Parser.js 69
 * src/primary@Parser.js 103

<meta.new.has.unknown.prop>
 * src/primary@Parser.js 146

<meta.new.not.in.function>
 * src/primary@Parser.js 149

<meth.paren>
 * src/fundef@Parser.js 126

<missing.name>
 * src/fundef@Parser.js 43

<must.not.have.reached>
 * src/statement@Parser.js 33

<new.args.is.unfinished>
 * src/new@Parser.js 79

<new.head.is.not.valid>
 * src/new@Parser.js 40

<new.line.before.arrow>
 * src/arrow@Parser.js 153

<nexpr.null.head>
 * src/non-assig@Parser.js 201

<non.tail.rest>
 * src/err-tricky@Parser.js 23

<no.semi>
 * src/dexport@Parser.js 36
 * src/dexport@Parser.js 117
 * src/dexport@Parser.js 214
 * src/dimport@Parser.js 120
 * src/statement@Parser.js 71
 * src/statement@Parser.js 294
 * src/statement@Parser.js 304
 * src/statement@Parser.js 334
 * src/statement@Parser.js 348
 * src/statement@Parser.js 472
 * src/statement@Parser.js 515
 * src/statement@Parser.js 681
 * src/var@Parser.js 77

<not.assignable>
 * src/new-assig@Parser.js 72

<not.a.valid.arg.list>
 * src/arrow@Parser.js 130
 * src/arrow@Parser.js 146

<not.bindable>
 * src/arrow@Parser.js 90

<not.stmt>
 * src/dexport@Parser.js 2
 * src/dimport@Parser.js 4
 * src/for@Parser.js 3
 * src/statement@Parser.js 132
 * src/statement@Parser.js 171
 * src/statement@Parser.js 224
 * src/statement@Parser.js 268
 * src/statement@Parser.js 314
 * src/statement@Parser.js 358
 * src/statement@Parser.js 446
 * src/statement@Parser.js 488
 * src/statement@Parser.js 545
 * src/statement@Parser.js 623
 * src/statement@Parser.js 664
 * src/var@Parser.js 3

<null.stmt>
 * src/for@Parser.js 105
 * src/for@Parser.js 145

<num.has.no.mantissa>
 * src/number@Parser.js 128

<num.idhead.tail>
 * src/number@Parser.js 108

<num.legacy.oct>
 * src/number@Parser.js 71

<num.with.first.not.valid>
 * src/number@Parser.js 19
 * src/number@Parser.js 33
 * src/number@Parser.js 53

<num.with.no.digits>
 * src/number@Parser.js 16
 * src/number@Parser.js 30
 * src/number@Parser.js 50

<obj.pattern.no.:>
 * src/pattern@Parser.js 97
 * src/pattern@Parser.js 105

<obj.prop.assig.not.allowed>
 * src/mem@Parser.js 213

<obj.prop.assig.not.assigop>
 * src/mem@Parser.js 211

<obj.prop.assig.not.id>
 * src/mem@Parser.js 209
 * src/mem@Parser.js 225

<obj.prop.is.null>
 * src/pattern@Parser.js 117

<obj.proto.has.dup>
 * src/mem@Parser.js 173

<obj.unfinished>
 * src/new-obj@Parser.js 115

<param.has.yield.or.super>
 * src/err-tricky@Parser.js 25

<paren.unbindable>
 * src/err-tricky@Parser.js 21

<pat.array.is.unfinished>
 * src/pattern@Parser.js 58

<pat.obj.is.unfinished>
 * src/pattern@Parser.js 135

<program.unfinished>
 * src/program@Parser.js 39

<prop.dyna.is.unfinished>
 * src/memname@Parser.js 21

<prop.dyna.no.expr>
 * src/memname@Parser.js 16

<regex.flag.is.dup>
 * src/regex@Parser.js 119
 * src/regex@Parser.js 123
 * src/regex@Parser.js 127
 * src/regex@Parser.js 131
 * src/regex@Parser.js 135

<regex.newline>
 * src/regex@Parser.js 77
 * src/regex@Parser.js 99

<regex.newline.esc>
 * src/regex@Parser.js 77

<regex.not.valid>
 * src/regex@Parser.js 169

<regex.unfinished>
 * src/regex@Parser.js 109

<regex.val.not.in.range>
 * src/regex@Parser.js 29

<reserved.id>
 * src/validate@Parser.js 141

<rest.arg.not.id>
 * src/arrow@Parser.js 72
 * src/arrow@Parser.js 79
 * src/pattern@Parser.js 163

<rest.arg.not.valid>
 * src/new-assig@Parser.js 62

<rest.has.no.arg>
 * src/pattern@Parser.js 157

<resv.unicode>
 * src/idStatementOrId@Parser.js 310

<return.not.in.a.function>
 * src/statement@Parser.js 452

<seq.non.tail.expr>
 * src/err-tricky@Parser.js 28

<shorthand.unassigned>
 * src/err-tricky@Parser.js 22

<stmt.null>
 * src/statement@Parser.js 26
 * src/statement@Parser.js 37

<strict.err.esc.not.valid>
 * src/statement@Parser.js 706

<strict.let.is.id>
 * src/idStatementOrId@Parser.js 50
 * src/let@Parser.js 19

<strict.oct.str.esc>
 * src/esc-general@Parser.js 39
 * src/esc-general@Parser.js 68
 * src/esc-general@Parser.js 146
 * src/esc-general@Parser.js 150

<str.newline>
 * src/string@Parser.js 32

<str.unfinished>
 * src/string@Parser.js 40

<switch.case.has.no.colon>
 * src/statement@Parser.js 435

<switch.has.a.dup.default>
 * src/statement@Parser.js 388

<switch.has.no.opening.curly>
 * src/statement@Parser.js 381

<switch.has.no.closing.paren>
 * src/statement@Parser.js 377

<switch.has.no.opening.paren>
 * src/statement@Parser.js 372

<switch.unfinished>
 * src/statement@Parser.js 401

<templ.expr.is.unfinished>
 * src/template@Parser.js 36

<templ.lit.is.unfinished>
 * src/template@Parser.js 91

<throw.has.newline>
 * src/statement@Parser.js 504

<throw.has.no.argument>
 * src/statement@Parser.js 509

<try.has.no.tail>
 * src/statement@Parser.js 572

<u.curly.is.unfinished>
 * src/esc-unicode@Parser.js 38

<u.curly.not.in.range>
 * src/esc-unicode@Parser.js 32

<u.esc.hex>
 * src/esc-unicode@Parser.js 27
 * src/esc-unicode@Parser.js 46
 * src/esc-unicode@Parser.js 51
 * src/esc-unicode@Parser.js 56
 * src/esc-unicode@Parser.js 61

<unary.before.an.exponentiation>
 * src/non-assig@Parser.js 241

<unexpected.id>
 * src/nextlookahead@Parser.js 489

<unexpected.lookahead>
 * src/mem@Parser.js 151
 * src/mem@Parser.js 154
 * src/new-paren@Parser.js 41
 * src/new-paren@Parser.js 104

<unexpected.rest>
 * src/err-tricky@Parser.js 26

<unfinished.paren>
 * src/new-paren@Parser.js 130

<u.second.esc.not.u>
 * src/esc-unicode@Parser.js 6

<u.second.not.in.range>
 * src/esc-unicode@Parser.js 12

<var.decl.neither.of.in>
 * src/var@Parser.js 112

<var.decl.not.=>
 * src/var@Parser.js 108

<var.has.an.empty.declarator>
 * src/var@Parser.js 58

<var.has.no.declarators>
 * src/var@Parser.js 32

<var.init.is.missing>
 * src/var@Parser.js 61

<var.must.have.init>
 * src/var@Parser.js 50

<while.has.no.closing.paren>
 * src/statement@Parser.js 185

<while.has.no.opening.paren>
 * src/statement@Parser.js 180

<with.has.no.end.paren>
 * src/statement@Parser.js 641

<with.has.no.opening.paren>
 * src/statement@Parser.js 636

<with.strict>
 * src/statement@Parser.js 626

<yield.args>
 * src/idStatementOrId@Parser.js 138

<yield.as.an.id>
 * src/non-assig@Parser.js 194

<yield.has.no.expr.deleg>
 * src/yield@Parser.js 16

