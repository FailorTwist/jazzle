`parseStatement(ctx) {
  `canBeStmt = true
  var exprHead = null
  if `lttype === TK.ID {
    exprHead = `parseExprHead()
    if `foundStmt {
      `foundStmt = false
      return `exprHead
    }
    `exprHead = exprHead
  }

  var expr = `parseExpr(ctx)
  ...
}

`parseNonSeqExpr(ctx, prec) {
  `prepareExprHead()
  var head = `exprHead
  `exprHead = null
  var head = `getExprHead()
  if head === null:
    switch `lttype {
    case TK.UNARY:
      return `parseUnary(ctx & CTX.FOR, PREC.U)
    case TK.YIELD:
      if prec != PREC.NONE:
        `err('yield.is.an.assig.expression')
      return `parseYield(ctx & CTX.FOR, PREC.NONE)
    default: `err('lookahead.unexpected')
    }
  ...
}
